<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="31" failures="0" errors="0" time="6.71">
  <testsuite name="Authentication" errors="0" failures="0" skipped="0" timestamp="2023-06-28T07:53:22" time="4.653" tests="15">
    <testcase classname="Authentication should login as admin" name="Authentication should login as admin" time="0.339">
    </testcase>
    <testcase classname="Authentication should not login with wrong credentials: admin a" name="Authentication should not login with wrong credentials: admin a" time="0.001">
    </testcase>
    <testcase classname="Authentication should not login with wrong credentials: a admin" name="Authentication should not login with wrong credentials: a admin" time="0.079">
    </testcase>
    <testcase classname="Authentication should not login with wrong credentials: a a" name="Authentication should not login with wrong credentials: a a" time="0.178">
    </testcase>
    <testcase classname="Authentication should login as user" name="Authentication should login as user" time="0.08">
    </testcase>
    <testcase classname="Add user should add user" name="Add user should add user" time="0.645">
    </testcase>
    <testcase classname="Update user should change user: fromAdmin pass true to pass false" name="Update user should change user: fromAdmin pass true to pass false" time="0.077">
    </testcase>
    <testcase classname="Update user should change user: toAdmin pass false to pass true" name="Update user should change user: toAdmin pass false to pass true" time="0.311">
    </testcase>
    <testcase classname="Update user should change user: changePass pass true to newpass true" name="Update user should change user: changePass pass true to newpass true" time="0.001">
    </testcase>
    <testcase classname="Update user should change user: changeAll pass true to newpass false" name="Update user should change user: changeAll pass true to newpass false" time="0.001">
    </testcase>
    <testcase classname="Update user should not update user with no password or admin" name="Update user should not update user with no password or admin" time="0.037">
    </testcase>
    <testcase classname="Update user should not update inexistent user" name="Update user should not update inexistent user" time="0.012">
    </testcase>
    <testcase classname="Delete user should delete user" name="Delete user should delete user" time="0.017">
    </testcase>
    <testcase classname="Delete user should not delete inexistent user" name="Delete user should not delete inexistent user" time="0.019">
    </testcase>
    <testcase classname="Get users should get all users" name="Get users should get all users" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Users" errors="0" failures="0" skipped="0" timestamp="2023-06-28T07:53:27" time="0.719" tests="4">
    <testcase classname="Users Get users" name="Users Get users" time="0.007">
    </testcase>
    <testcase classname="Users Add users" name="Users Add users" time="0.124">
    </testcase>
    <testcase classname="Users Update users" name="Users Update users" time="0.084">
    </testcase>
    <testcase classname="Users Delete users" name="Users Delete users" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Add collection" errors="0" failures="0" skipped="0" timestamp="2023-06-28T07:53:28" time="1.253" tests="12">
    <testcase classname="Add collection should add collection" name="Add collection should add collection" time="0.11">
    </testcase>
    <testcase classname="Add collection should add collection to other user if admin" name="Add collection should add collection to other user if admin" time="0">
    </testcase>
    <testcase classname="Add collection should not add collection to other user if not admin" name="Add collection should not add collection to other user if not admin" time="0.001">
    </testcase>
    <testcase classname="Get collection should get collection" name="Get collection should get collection" time="0.028">
    </testcase>
    <testcase classname="Get collection should get collection of other user if admin" name="Get collection should get collection of other user if admin" time="0.023">
    </testcase>
    <testcase classname="Get collection should not get collection of other user if not admin" name="Get collection should not get collection of other user if not admin" time="0.016">
    </testcase>
    <testcase classname="Get collection should get all collections if admin" name="Get collection should get all collections if admin" time="0.022">
    </testcase>
    <testcase classname="Get collection should not get all collections if not admin" name="Get collection should not get all collections if not admin" time="0.014">
    </testcase>
    <testcase classname="Delete collection should delete collection" name="Delete collection should delete collection" time="0.043">
    </testcase>
    <testcase classname="Delete collection should delete collection of other user if admin" name="Delete collection should delete collection of other user if admin" time="0.041">
    </testcase>
    <testcase classname="Delete collection should not delete collection of other user if not admin" name="Delete collection should not delete collection of other user if not admin" time="0.02">
    </testcase>
    <testcase classname="Delete collection should not delete non existent collection" name="Delete collection should not delete non existent collection" time="0.015">
    </testcase>
  </testsuite>
</testsuites>